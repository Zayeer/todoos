{"version":3,"sources":["todoList.js","addTodo.js","taskDetails.js","sortTasks.js","Todo.js","App.js","index.js"],"names":["Task","props","className","data-task","dataTask","onClick","displayTaskDetails","style","bgColor","type","id","checkboxHandler","name","dueDate","icon","faTrashAlt","deleteTask","TodoList","allTasks","this","todos","map","task","taskTitle","key","React","Component","AddTodo","onSubmit","addTaskToList","placeholder","value","TaskDetails","closeMenu","onChange","input","priority","desc","options","text","SortTask","Dropdown","clearable","selection","sortTodos","Todo","state","taskProps","defaultSort","bind","duplicateTask","updateTaskDetails","saveData","getSavedData","closeTaskDetails","changeTaskColor","taskTextStyling","sortByAlphabets","sortByPriority","sortByDate","event","preventDefault","document","querySelector","length","newTask","checked","setState","concat","currentTarget","reset","some","todo","toLowerCase","taskDetailBg","target","children","display","i","getAttribute","checkBox","parentElement","checkbox","nextElementSibling","textDecoration","taskDetail","taskList","querySelectorAll","backgroundColor","parent","splice","indexOf","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","forEach","checkBoxes","innerText","unSorted","sorted","todoTitles","push","sort","highPriority","filter","mediumPriority","lowPriority","noDateTodos","datedTodos","unSortedDates","Date","getTime","a","b","sortedDates","date","getFullYear","getMonth","slice","getDate","uniqueSortedDates","Set","j","window","addEventListener","removeEventListener","App","ReactDOM","render"],"mappings":"4QAuBA,SAASA,EAAKC,GACZ,OACE,wBACEC,UAAU,OACVC,YAAWF,EAAMG,SACjBC,QAASJ,EAAMK,mBACfC,MAAON,EAAMO,SAEb,2BAAOC,KAAK,WAAWC,GAAG,aAAaL,QAASJ,EAAMU,kBACtD,uBAAGD,GAAG,QAAQT,EAAMW,MACpB,uBAAGF,GAAG,QAAQT,EAAMY,SACpB,kBAAC,IAAD,CAAiBC,KAAMC,IAAYV,QAASJ,EAAMe,cAKzCC,M,uKAlCH,IAAD,OACDC,EAAWC,KAAKlB,MAAMmB,MAAMC,KAAI,SAACC,GAAD,OACpC,kBAACtB,EAAD,CACEY,KAAMU,EAAKC,UACXV,QAASS,EAAKT,QACdW,IAAKF,EAAKC,UACVnB,SAAUkB,EAAKC,UACfP,WAAY,EAAKf,MAAMe,WACvBV,mBAAoB,EAAKL,MAAMK,mBAC/BK,gBAAiB,EAAKV,MAAMU,gBAC5BH,QAAS,EAAKP,MAAMO,aAIxB,OAAO,wBAAIN,UAAU,aAAagB,O,GAffO,IAAMC,WCOdC,MATf,SAAiB1B,GACf,OACE,0BAAMC,UAAU,WAAW0B,SAAU3B,EAAM4B,eACzC,2BAAOpB,KAAK,OAAOqB,YAAY,OAAO5B,UAAU,cAChD,2BAAOO,KAAK,SAASsB,MAAM,MAAM7B,UAAU,kBC6BlC8B,E,uKA/BX,OACE,yBAAK9B,UAAU,gBAAgBG,QAASc,KAAKlB,MAAMgC,WACjD,0BAAM/B,UAAU,eACd,wBAAIQ,GAAG,aAAaS,KAAKlB,MAAMsB,WAC/B,2BACEd,KAAK,OACLC,GAAG,UACHqB,MAAOZ,KAAKlB,MAAMY,QAClBqB,SAAUf,KAAKlB,MAAMkC,QAEvB,4BACEzB,GAAG,WACHqB,MAAOZ,KAAKlB,MAAMmC,SAClBF,SAAUf,KAAKlB,MAAMkC,OAErB,wCACA,0CACA,wCAEF,8BACEL,YAAY,wBACZpB,GAAG,OACHqB,MAAOZ,KAAKlB,MAAMoC,KAClBH,SAAUf,KAAKlB,MAAMkC,c,GAzBPV,IAAMC,W,SCC1BY,EAAU,CACd,CAAEd,IAAK,EAAGe,KAAM,GAAIR,MAAO,GAC3B,CAAEP,IAAK,EAAGe,KAAM,oBAAqBR,MAAO,GAC5C,CAAEP,IAAK,EAAGe,KAAM,mBAAoBR,MAAO,GAC3C,CAAEP,IAAK,EAAGe,KAAM,eAAgBR,MAAO,IAa1BS,MAVf,SAAkBvC,GAChB,OACE,kBAACwC,EAAA,EAAD,CACEC,WAAS,EACTJ,QAASA,EACTK,WAAS,EACTT,SAAUjC,EAAM2C,aC4WPC,G,yDApXb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAED6C,MAAQ,CACX1B,MAAO,GACP2B,UAAW,CACTnC,KAAM,GACNC,QAAS,GACTuB,SAAU,OACVC,KAAM,IAERW,YAAa,IAGf,EAAKnB,cAAgB,EAAKA,cAAcoB,KAAnB,gBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKjC,WAAa,EAAKA,WAAWiC,KAAhB,gBAClB,EAAK3C,mBAAqB,EAAKA,mBAAmB2C,KAAxB,gBAC1B,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBAChB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBACpB,EAAKK,iBAAmB,EAAKA,iBAAiBL,KAAtB,gBACxB,EAAKtC,gBAAkB,EAAKA,gBAAgBsC,KAArB,gBACvB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,gBAAkB,EAAKA,gBAAgBP,KAArB,gBACvB,EAAKL,UAAY,EAAKA,UAAUK,KAAf,gBACjB,EAAKQ,gBAAkB,EAAKA,gBAAgBR,KAArB,gBACvB,EAAKS,eAAiB,EAAKA,eAAeT,KAApB,gBACtB,EAAKU,WAAa,EAAKA,WAAWV,KAAhB,gBA5BD,E,0DAgCLW,GACZA,EAAMC,iBACN,IAAMtC,EAAYuC,SAASC,cAAc,cACzC,IAAK5C,KAAK+B,cAAc3B,EAAUQ,QAAUR,EAAUQ,MAAMiC,OAAS,EAAG,CACtE,IAAMC,EAAU,CACd1C,UAAWA,EAAUQ,MACrBlB,QAAS,GACTuB,SAAU,OACVC,KAAM,GACN6B,SAAS,GAEX/C,KAAKgD,UAAS,SAACrB,GAGb,MAAO,CACL1B,MAHY0B,EAAM1B,MAAMgD,OAAO,CAACH,IAIhCjB,YAHkBF,EAAME,YAAYoB,OAAO,CAACH,QAOlDL,EAAMS,cAAcC,U,oCAIRhD,GACZ,OAAOH,KAAK2B,MAAM1B,MAAMmD,MACtB,SAACC,GAAD,OAAUA,EAAKjD,UAAUkD,gBAAkBnD,EAAKmD,mB,yCAKjCb,GACjB,IAAMc,EAAeZ,SAASC,cAAc,kBAC5C,GACEH,EAAMe,SAAWf,EAAMS,cAAcO,SAAS,IAC9ChB,EAAMe,SAAWf,EAAMS,cAAcO,SAAS,IAC9ChB,EAAMe,SAAWf,EAAMS,cAAcO,SAAS,GAAGA,SAAS,GAC1D,CACAF,EAAanE,MAAMsE,QAAU,OAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAI3D,KAAK2B,MAAM1B,MAAM4C,OAAQc,IAC3C,GACE3D,KAAK2B,MAAM1B,MAAM0D,GAAGvD,UAAUkD,gBAC9Bb,EAAMS,cAAcU,aAAa,aAAaN,cAC9C,CACAtD,KAAKgD,SAAS,CACZpB,UAAW,CACTnC,KAAMO,KAAK2B,MAAM1B,MAAM0D,GAAGvD,UAC1BV,QAASM,KAAK2B,MAAM1B,MAAM0D,GAAGjE,QAC7BuB,SAAUjB,KAAK2B,MAAM1B,MAAM0D,GAAG1C,SAC9BC,KAAMlB,KAAK2B,MAAM1B,MAAM0D,GAAGzC,QAG9B,U,sCAOQuB,GACd,IAAMoB,EAAWpB,EAAMe,OACvBxD,KAAKqC,gBAAgBwB,GACrB,IAAM1D,EAAOsC,EAAMe,OAAOM,cAC1B9D,KAAKgD,UAAS,SAACrB,GAEb,IADA,IAAI1B,EAAK,YAAO0B,EAAM1B,OACb0D,EAAI,EAAGA,EAAI1D,EAAM4C,OAAQc,IAChC,GAAI1D,EAAM0D,GAAGvD,YAAcD,EAAKyD,aAAa,aAAc,CACzD,GAAIC,EAASd,QAAS,CACpB9C,EAAM0D,GAAGZ,SAAU,EACnB,MAEA9C,EAAM0D,GAAGZ,SAAU,EACnB,MAIN,MAAO,CACL9C,c,sCAMU8D,GACVA,EAAShB,QACXgB,EAASC,mBAAmB5E,MAAM6E,eAAiB,eAEnDF,EAASC,mBAAmB5E,MAAM6E,eAAiB,S,wCAMrCxB,GAAQ,IAAD,OACvBA,EAAMC,iBACN,IAAMc,EAASf,EAAMe,OACrBxD,KAAKgD,UAAS,SAACrB,GAGb,IAFA,IAAM1B,EAAQ0B,EAAM1B,MACd2B,EAAYD,EAAMC,UACf+B,EAAI,EAAGA,EAAI1D,EAAM4C,OAAQc,IAChC,GAAI1D,EAAM0D,GAAGvD,YAAcuB,EAAMC,UAAUnC,KAAM,CAC/CQ,EAAM0D,GAAGH,EAAOI,aAAa,OAASJ,EAAO5C,MAC7CgB,EAAU4B,EAAOI,aAAa,OAASJ,EAAO5C,MAC1C4C,IAAWb,SAASC,cAAc,cACpC,EAAKR,gBAAgBnC,EAAM0D,IAE7B,MAGJ,MAAO,CACL1D,QACA2B,kB,sCAKUzB,GAGd,IAFA,IAAM+D,EAAavB,SAASC,cAAc,gBACpCuB,EAAWxB,SAASyB,iBAAiB,SAClCT,EAAI,EAAGA,EAAIQ,EAAStB,OAAQc,IAEjCQ,EAASR,GAAGC,aAAa,aAAaN,gBACtCnD,EAAKC,UAAUkD,gBAEO,WAAlBnD,EAAKc,UACPkD,EAASR,GAAGvE,MAAMiF,gBAAkB,UACpCH,EAAW9E,MAAMiF,gBAAkB,WACR,QAAlBlE,EAAKc,UACdkD,EAASR,GAAGvE,MAAMiF,gBAAkB,UACpCH,EAAW9E,MAAMiF,gBAAkB,YAEnCF,EAASR,GAAGvE,MAAMiF,gBAAkB,UACpCH,EAAW9E,MAAMiF,gBAAkB,c,uCAO1B5B,GACf,GAAIA,EAAMe,SAAWf,EAAMS,cAAe,CACxC,IAAMK,EAAeZ,SAASC,cAAc,kBACzBD,SAASC,cAAc,gBAC/BO,QACXI,EAAanE,MAAMsE,QAAU,U,iCAKtBjB,GACT,IAAI6B,EAEFA,EAD2C,SAAzC7B,EAAMe,OAAOM,cAAc/E,UACpB0D,EAAMe,OAAOM,cAEbrB,EAAMe,OAAOM,cAAcA,cAEtC9D,KAAKgD,UAAS,SAACrB,GAGb,IAFA,IAAM1B,EAAQ0B,EAAM1B,MACd4B,EAAcF,EAAME,YACjB8B,EAAI,EAAGA,EAAIhC,EAAM1B,MAAM4C,OAAQc,IACtC,GACE1D,EAAM0D,GAAGvD,UAAUkD,gBACnBgB,EAAOV,aAAa,aAAaN,cACjC,CACAzB,EAAY0C,OAAO1C,EAAY2C,QAAQvE,EAAM0D,IAAK,GAClD1D,EAAMsE,OAAOZ,EAAG,GAChB,MAIJ,OADAW,EAAOlF,MAAMsE,QAAU,OAChB,CACLzD,QACA4B,oB,+BAMGY,GACHzC,KAAK2B,MAAM1B,MAAM4C,OAAS,EAC5B4B,aAAaC,QAAQ,QAASC,KAAKC,UAAU5E,KAAK2B,MAAME,cAExD4C,aAAaI,WAAW,W,qCAKZ,IAAD,OACP5E,EAAQ0E,KAAKG,MAAML,aAAaM,QAAQ,UAC9C,GAAI9E,EAAO,CACT,IAAM4B,EAAW,YAAO5B,GACxBD,KAAKgD,SAAS,CACZ/C,QACA4B,gBAIF5B,EAAM+E,SAAQ,SAAC3B,GACS,SAAlBA,EAAKpC,UACP,EAAKmB,gBAAgBiB,MAKzB,IAAM4B,EAAatC,SAASyB,iBAAiB,wBAC7CnE,EAAM+E,SAAQ,SAAC3B,GACb,GAAIA,EAAKN,QACP,IAAK,IAAIY,EAAI,EAAGA,EAAIsB,EAAWpC,OAAQc,IAAK,CAE1C,GADasB,EAAWtB,GAAGG,cAClBF,aAAa,eAAiBP,EAAKjD,UAAW,CACrD6E,EAAWtB,GAAGZ,SAAU,EACxB,EAAKV,gBAAgB4C,EAAWtB,IAChC,c,gCAQFlB,GAAQ,IAAD,OACXjB,EAAYiB,EAAMe,OAAO0B,UAC7BlF,KAAKgD,UAAS,SAACrB,GACb,IACIwD,EACJ,MAAkB,sBAAd3D,GACF2D,EAAWxD,EAAM1B,MAEV,CACLA,MAFM,EAAKqC,gBAAgB6C,KAIN,qBAAd3D,GACT2D,EAAWxD,EAAM1B,MAEV,CACLA,MAFM,EAAKsC,eAAe4C,KAIL,iBAAd3D,GACT2D,EAAWxD,EAAM1B,MAEV,CACLA,MAFM,EAAKuC,WAAW2C,KAMjB,CACLlF,MAFG,YAAO,EAAK0B,MAAME,mB,sCAQbsD,GACd,IAAMC,EAAS,GACXC,EAAa,GAQjB,OAPAF,EAASH,SAAQ,SAAC3B,GAChBgC,EAAWC,KAAKjC,EAAKjD,cAEvBiF,EAAWE,OACXJ,EAASH,SAAQ,SAAC3B,GAChB+B,EAAOC,EAAWb,QAAQnB,EAAKjD,YAAciD,KAExC+B,I,qCAGMD,GACb,IAAMK,EAAeL,EAASM,QAAO,SAACpC,GAAD,MAA4B,SAAlBA,EAAKpC,YAC9CyE,EAAiBP,EAASM,QAC9B,SAACpC,GAAD,MAA4B,WAAlBA,EAAKpC,YAEX0E,EAAcR,EAASM,QAAO,SAACpC,GAAD,MAA4B,QAAlBA,EAAKpC,YAEnD,MADY,sBAAOuE,GAAP,YAAwBE,GAAxB,YAA2CC,M,iCAI9CR,GACT,IAAMS,EAAcT,EAASM,QAAO,SAACpC,GAAD,MAA2B,KAAjBA,EAAK3D,WAC7CmG,EAAaV,EAASM,QAAO,SAACpC,GAAD,MAA2B,KAAjBA,EAAK3D,WAC5CoG,EAAgB,GACtBD,EAAWb,SAAQ,SAAC3B,GAAD,OACjByC,EAAcR,KAAK,IAAIS,KAAK1C,EAAK3D,SAASsG,cAE5CF,EAAcP,MAAK,SAACU,EAAGC,GAAJ,OAAUD,EAAIC,KASjC,IARA,IAAMC,EAAcL,EAAc5F,KAAI,SAACkG,GAIrC,OAHa,IAAIL,KAAKK,GAAMC,cAGd,KAFC,KAAO,IAAIN,KAAKK,GAAME,WAAa,IAAIC,OAAO,GAEjC,KADX,IAAM,IAAIR,KAAKK,GAAMI,WAAWD,OAAO,MAGpDnB,EAAS,GACTqB,EAAiB,YAAO,IAAIC,IAAIP,IAC7BxC,EAAI,EAAGA,EAAI8C,EAAkB5D,OAAQc,IAC5C,IAAK,IAAIgD,EAAI,EAAGA,EAAId,EAAWhD,OAAQ8D,IACjCF,EAAkB9C,KAAOkC,EAAWc,GAAGjH,SACzC0F,EAAOE,KAAKO,EAAWc,IAM7B,OAAOvB,EAAOnC,OAAO2C,K,0CAIrBgB,OAAOC,iBAAiB,OAAQ7G,KAAKkC,cACrC0E,OAAOC,iBAAiB,eAAgB7G,KAAKiC,Y,6CAI7C2E,OAAOE,oBAAoB,OAAQ9G,KAAKkC,cACxC0E,OAAOE,oBAAoB,eAAgB9G,KAAKiC,Y,+BAGxC,IAAD,EACmCjC,KAAK2B,MAAMC,UAA7CnC,EADD,EACCA,KAAMC,EADP,EACOA,QAASuB,EADhB,EACgBA,SAAUC,EAD1B,EAC0BA,KACjC,OACE,yBAAKnC,UAAU,kBACb,kBAAC,EAAD,CAAS2B,cAAeV,KAAKU,gBAC7B,kBAAC,EAAD,CAAUe,UAAWzB,KAAKyB,YAC1B,kBAAC,EAAD,CACE5B,WAAYG,KAAKH,WACjBV,mBAAoBa,KAAKb,mBACzBK,gBAAiBQ,KAAKR,gBACtBH,QAASW,KAAK2B,MAAMtC,QACpBY,MAAOD,KAAK2B,MAAM1B,QAEpB,kBAAC,EAAD,CACEG,UAAWX,EACXC,QAASA,EACTuB,SAAUA,EACVC,KAAMA,EACNF,MAAOhB,KAAKgC,kBACZlB,UAAWd,KAAKmC,iBAChB3C,gBAAiBQ,KAAKR,uB,GA9Wbc,IAAMC,YCSVwG,E,uKAXX,OACE,yBAAKxH,GAAG,aACN,yBAAKR,UAAU,iBACb,6CAEF,kBAAC,EAAD,W,GAPUuB,IAAMC,W,OCGxByG,IAASC,OAAO,kBAAC,EAAD,MAAStE,SAASC,cAAc,Y","file":"static/js/main.863d4349.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    const allTasks = this.props.todos.map((task) => (\r\n      <Task\r\n        name={task.taskTitle}\r\n        dueDate={task.dueDate}\r\n        key={task.taskTitle}\r\n        dataTask={task.taskTitle}\r\n        deleteTask={this.props.deleteTask}\r\n        displayTaskDetails={this.props.displayTaskDetails}\r\n        checkboxHandler={this.props.checkboxHandler}\r\n        bgColor={this.props.bgColor}\r\n      />\r\n    ));\r\n\r\n    return <ul className=\"todo-list\">{allTasks}</ul>;\r\n  }\r\n}\r\n\r\nfunction Task(props) {\r\n  return (\r\n    <li\r\n      className=\"task\"\r\n      data-task={props.dataTask}\r\n      onClick={props.displayTaskDetails}\r\n      style={props.bgColor}\r\n    >\r\n      <input type=\"checkbox\" id=\"check-task\" onClick={props.checkboxHandler} />\r\n      <p id=\"name\">{props.name}</p>\r\n      <p id=\"date\">{props.dueDate}</p>\r\n      <FontAwesomeIcon icon={faTrashAlt} onClick={props.deleteTask} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nfunction AddTodo(props) {\r\n  return (\r\n    <form className=\"add-todo\" onSubmit={props.addTaskToList}>\r\n      <input type=\"text\" placeholder=\"Task\" className=\"task-name\" />\r\n      <input type=\"submit\" value=\"Add\" className=\"submit-todo\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nclass TaskDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"taskDetail-bg\" onClick={this.props.closeMenu}>\r\n        <form className=\"task-detail\">\r\n          <h2 id=\"taskTitle\">{this.props.taskTitle}</h2>\r\n          <input\r\n            type=\"date\"\r\n            id=\"dueDate\"\r\n            value={this.props.dueDate}\r\n            onChange={this.props.input}\r\n          />\r\n          <select\r\n            id=\"priority\"\r\n            value={this.props.priority}\r\n            onChange={this.props.input}\r\n          >\r\n            <option>high</option>\r\n            <option>medium</option>\r\n            <option>low</option>\r\n          </select>\r\n          <textarea\r\n            placeholder=\"describe your task...\"\r\n            id=\"desc\"\r\n            value={this.props.desc}\r\n            onChange={this.props.input}\r\n          ></textarea>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskDetails;\r\n","import React from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nconst options = [\r\n  { key: 1, text: \"\", value: 1 },\r\n  { key: 2, text: \"Sort by alphabets\", value: 2 },\r\n  { key: 3, text: \"Sort by priority\", value: 3 },\r\n  { key: 4, text: \"Sort by date\", value: 4 },\r\n];\r\n\r\nfunction SortTask(props) {\r\n  return (\r\n    <Dropdown\r\n      clearable\r\n      options={options}\r\n      selection\r\n      onChange={props.sortTodos}\r\n    />\r\n  );\r\n}\r\nexport default SortTask;\r\n","import React from \"react\";\r\nimport TodoList from \"./todoList\";\r\nimport AddTodo from \"./addTodo\";\r\nimport TaskDetails from \"./taskDetails\";\r\nimport SortTask from \"./sortTasks\";\r\nimport \"./index.css\";\r\n\r\nclass Todo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      todos: [],\r\n      taskProps: {\r\n        name: \"\",\r\n        dueDate: \"\",\r\n        priority: \"high\",\r\n        desc: \"\",\r\n      },\r\n      defaultSort: [], //sorted in insertion time order\r\n    };\r\n\r\n    this.addTaskToList = this.addTaskToList.bind(this);\r\n    this.duplicateTask = this.duplicateTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n    this.displayTaskDetails = this.displayTaskDetails.bind(this);\r\n    this.updateTaskDetails = this.updateTaskDetails.bind(this);\r\n    this.saveData = this.saveData.bind(this);\r\n    this.getSavedData = this.getSavedData.bind(this);\r\n    this.closeTaskDetails = this.closeTaskDetails.bind(this);\r\n    this.checkboxHandler = this.checkboxHandler.bind(this);\r\n    this.changeTaskColor = this.changeTaskColor.bind(this);\r\n    this.taskTextStyling = this.taskTextStyling.bind(this);\r\n    this.sortTodos = this.sortTodos.bind(this);\r\n    this.sortByAlphabets = this.sortByAlphabets.bind(this);\r\n    this.sortByPriority = this.sortByPriority.bind(this);\r\n    this.sortByDate = this.sortByDate.bind(this);\r\n  }\r\n\r\n  //add new task to tasks list\r\n  addTaskToList(event) {\r\n    event.preventDefault();\r\n    const taskTitle = document.querySelector(\".task-name\");\r\n    if (!this.duplicateTask(taskTitle.value) && taskTitle.value.length > 0) {\r\n      const newTask = {\r\n        taskTitle: taskTitle.value,\r\n        dueDate: \"\",\r\n        priority: \"high\",\r\n        desc: \"\",\r\n        checked: false,\r\n      };\r\n      this.setState((state) => {\r\n        const todos = state.todos.concat([newTask]);\r\n        const defaultSort = state.defaultSort.concat([newTask]);\r\n        return {\r\n          todos,\r\n          defaultSort,\r\n        };\r\n      });\r\n    }\r\n    event.currentTarget.reset();\r\n  }\r\n\r\n  //check for duplicate tasks\r\n  duplicateTask(task) {\r\n    return this.state.todos.some(\r\n      (todo) => todo.taskTitle.toLowerCase() === task.toLowerCase()\r\n    );\r\n  }\r\n\r\n  //display task details menu\r\n  displayTaskDetails(event) {\r\n    const taskDetailBg = document.querySelector(\".taskDetail-bg\");\r\n    if (\r\n      event.target !== event.currentTarget.children[0] &&\r\n      event.target !== event.currentTarget.children[3] &&\r\n      event.target !== event.currentTarget.children[3].children[0]\r\n    ) {\r\n      taskDetailBg.style.display = \"grid\";\r\n      for (let i = 0; i < this.state.todos.length; i++) {\r\n        if (\r\n          this.state.todos[i].taskTitle.toLowerCase() ===\r\n          event.currentTarget.getAttribute(\"data-task\").toLowerCase()\r\n        ) {\r\n          this.setState({\r\n            taskProps: {\r\n              name: this.state.todos[i].taskTitle,\r\n              dueDate: this.state.todos[i].dueDate,\r\n              priority: this.state.todos[i].priority,\r\n              desc: this.state.todos[i].desc,\r\n            },\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //change state based on checked value\r\n  checkboxHandler(event) {\r\n    const checkBox = event.target;\r\n    this.taskTextStyling(checkBox);\r\n    const task = event.target.parentElement;\r\n    this.setState((state) => {\r\n      let todos = [...state.todos];\r\n      for (let i = 0; i < todos.length; i++) {\r\n        if (todos[i].taskTitle === task.getAttribute(\"data-task\")) {\r\n          if (checkBox.checked) {\r\n            todos[i].checked = true;\r\n            break;\r\n          } else {\r\n            todos[i].checked = false;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        todos,\r\n      };\r\n    });\r\n  }\r\n\r\n  //add line-through style to the task name and date if the task is checked\r\n  taskTextStyling(checkbox) {\r\n    if (checkbox.checked) {\r\n      checkbox.nextElementSibling.style.textDecoration = \"line-through\";\r\n    } else {\r\n      checkbox.nextElementSibling.style.textDecoration = \"none\";\r\n    }\r\n  }\r\n\r\n  //updates todos state property based on input from task details menu\r\n  //if priority field is updated, then make a call to changeTaskColor function\r\n  updateTaskDetails(event) {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    this.setState((state) => {\r\n      const todos = state.todos;\r\n      const taskProps = state.taskProps;\r\n      for (let i = 0; i < todos.length; i++) {\r\n        if (todos[i].taskTitle === state.taskProps.name) {\r\n          todos[i][target.getAttribute(\"id\")] = target.value;\r\n          taskProps[target.getAttribute(\"id\")] = target.value;\r\n          if (target === document.querySelector(\"#priority\")) {\r\n            this.changeTaskColor(todos[i]);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        todos,\r\n        taskProps,\r\n      };\r\n    });\r\n  }\r\n\r\n  changeTaskColor(task) {\r\n    const taskDetail = document.querySelector(\".task-detail\");\r\n    const taskList = document.querySelectorAll(\".task\");\r\n    for (let i = 0; i < taskList.length; i++) {\r\n      if (\r\n        taskList[i].getAttribute(\"data-task\").toLowerCase() ===\r\n        task.taskTitle.toLowerCase()\r\n      ) {\r\n        if (task.priority === \"medium\") {\r\n          taskList[i].style.backgroundColor = \"#FFA500\";\r\n          taskDetail.style.backgroundColor = \"#FFA500\";\r\n        } else if (task.priority === \"low\") {\r\n          taskList[i].style.backgroundColor = \"#00FA9A\";\r\n          taskDetail.style.backgroundColor = \"#00FA9A\";\r\n        } else {\r\n          taskList[i].style.backgroundColor = \"#B22222\";\r\n          taskDetail.style.backgroundColor = \"#B22222\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //closes task details menu\r\n  closeTaskDetails(event) {\r\n    if (event.target === event.currentTarget) {\r\n      const taskDetailBg = document.querySelector(\".taskDetail-bg\");\r\n      const taskDetail = document.querySelector(\".task-detail\");\r\n      taskDetail.reset();\r\n      taskDetailBg.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  //deletes the task\r\n  deleteTask(event) {\r\n    let parent; //since the delete icon is svg, which has path as its child element\r\n    if (event.target.parentElement.className === \"task\") {\r\n      parent = event.target.parentElement;\r\n    } else {\r\n      parent = event.target.parentElement.parentElement;\r\n    }\r\n    this.setState((state) => {\r\n      const todos = state.todos;\r\n      const defaultSort = state.defaultSort;\r\n      for (let i = 0; i < state.todos.length; i++) {\r\n        if (\r\n          todos[i].taskTitle.toLowerCase() ===\r\n          parent.getAttribute(\"data-task\").toLowerCase()\r\n        ) {\r\n          defaultSort.splice(defaultSort.indexOf(todos[i]), 1);\r\n          todos.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n      parent.style.display = \"none\";\r\n      return {\r\n        todos,\r\n        defaultSort,\r\n      };\r\n    });\r\n  }\r\n\r\n  //save data to local storage\r\n  saveData(event) {\r\n    if (this.state.todos.length > 0) {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(this.state.defaultSort));\r\n    } else {\r\n      localStorage.removeItem(\"tasks\");\r\n    }\r\n  }\r\n\r\n  //access saved data from local storage\r\n  getSavedData() {\r\n    const todos = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    if (todos) {\r\n      const defaultSort = [...todos];\r\n      this.setState({\r\n        todos,\r\n        defaultSort,\r\n      });\r\n\r\n      //apply the bg color of each todo based on priority\r\n      todos.forEach((todo) => {\r\n        if (todo.priority !== \"high\") {\r\n          this.changeTaskColor(todo);\r\n        }\r\n      });\r\n\r\n      //apply styling appropriately to tasks with checked status\r\n      const checkBoxes = document.querySelectorAll(\"input[type=checkbox]\");\r\n      todos.forEach((todo) => {\r\n        if (todo.checked) {\r\n          for (let i = 0; i < checkBoxes.length; i++) {\r\n            const task = checkBoxes[i].parentElement;\r\n            if (task.getAttribute(\"data-task\") === todo.taskTitle) {\r\n              checkBoxes[i].checked = true;\r\n              this.taskTextStyling(checkBoxes[i]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  sortTodos(event) {\r\n    let selection = event.target.innerText;\r\n    this.setState((state) => {\r\n      let todos;\r\n      let unSorted;\r\n      if (selection === \"Sort by alphabets\") {\r\n        unSorted = state.todos;\r\n        todos = this.sortByAlphabets(unSorted);\r\n        return {\r\n          todos,\r\n        };\r\n      } else if (selection === \"Sort by priority\") {\r\n        unSorted = state.todos;\r\n        todos = this.sortByPriority(unSorted);\r\n        return {\r\n          todos,\r\n        };\r\n      } else if (selection === \"Sort by date\") {\r\n        unSorted = state.todos;\r\n        todos = this.sortByDate(unSorted);\r\n        return {\r\n          todos,\r\n        };\r\n      } else {\r\n        todos = [...this.state.defaultSort];\r\n        return {\r\n          todos,\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  sortByAlphabets(unSorted) {\r\n    const sorted = [];\r\n    let todoTitles = [];\r\n    unSorted.forEach((todo) => {\r\n      todoTitles.push(todo.taskTitle);\r\n    });\r\n    todoTitles.sort();\r\n    unSorted.forEach((todo) => {\r\n      sorted[todoTitles.indexOf(todo.taskTitle)] = todo;\r\n    });\r\n    return sorted;\r\n  }\r\n\r\n  sortByPriority(unSorted) {\r\n    const highPriority = unSorted.filter((todo) => todo.priority === \"high\");\r\n    const mediumPriority = unSorted.filter(\r\n      (todo) => todo.priority === \"medium\"\r\n    );\r\n    const lowPriority = unSorted.filter((todo) => todo.priority === \"low\");\r\n    const sorted = [...highPriority, ...mediumPriority, ...lowPriority];\r\n    return sorted;\r\n  }\r\n\r\n  sortByDate(unSorted) {\r\n    const noDateTodos = unSorted.filter((todo) => todo.dueDate === \"\");\r\n    const datedTodos = unSorted.filter((todo) => todo.dueDate !== \"\");\r\n    const unSortedDates = [];\r\n    datedTodos.forEach((todo) =>\r\n      unSortedDates.push(new Date(todo.dueDate).getTime())\r\n    );\r\n    unSortedDates.sort((a, b) => a - b);\r\n    const sortedDates = unSortedDates.map((date) => {\r\n      const year = new Date(date).getFullYear();\r\n      const month = (\"0\" + (new Date(date).getMonth() + 1)).slice(-2);\r\n      const dueDate = (\"0\" + new Date(date).getDate()).slice(-2);\r\n      return year + \"-\" + month + \"-\" + dueDate;\r\n    });\r\n    const sorted = [];\r\n    const uniqueSortedDates = [...new Set(sortedDates)];\r\n    for (let i = 0; i < uniqueSortedDates.length; i++) {\r\n      for (let j = 0; j < datedTodos.length; j++) {\r\n        if (uniqueSortedDates[i] === datedTodos[j].dueDate) {\r\n          sorted.push(datedTodos[j]);\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    return sorted.concat(noDateTodos);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"load\", this.getSavedData);\r\n    window.addEventListener(\"beforeunload\", this.saveData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"load\", this.getSavedData);\r\n    window.removeEventListener(\"beforeunload\", this.saveData);\r\n  }\r\n\r\n  render() {\r\n    const { name, dueDate, priority, desc } = this.state.taskProps;\r\n    return (\r\n      <div className=\"todo-container\">\r\n        <AddTodo addTaskToList={this.addTaskToList} />\r\n        <SortTask sortTodos={this.sortTodos} />\r\n        <TodoList\r\n          deleteTask={this.deleteTask}\r\n          displayTaskDetails={this.displayTaskDetails}\r\n          checkboxHandler={this.checkboxHandler}\r\n          bgColor={this.state.bgColor}\r\n          todos={this.state.todos}\r\n        />\r\n        <TaskDetails\r\n          taskTitle={name}\r\n          dueDate={dueDate}\r\n          priority={priority}\r\n          desc={desc}\r\n          input={this.updateTaskDetails}\r\n          closeMenu={this.closeTaskDetails}\r\n          checkboxHandler={this.checkboxHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div id=\"container\">\n        <nav className=\"nav-container\">\n          <h1>React Todoos</h1>\n        </nav>\n        <Todo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}